{"version":3,"sources":["../src/hash-actions.js"],"names":[],"mappings":"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","file":"hash-actions.js","sourcesContent":["/*! hash-actions v0.0.3 | Kari SÃ¶derholm | https://github.com/Haprog/hash-actions */\nwindow.hashActions = (() => {\n  const registeredHashes = [];\n  let oldHash = window.location.hash;\n  const hashActions = {\n    hideEmptyHashFromURL: false,\n\n    removeHashSymbol(url) {\n      return url.split('#')[0];\n    },\n\n    setHash(hash) {\n      if (hash === '') {\n        this.removeHashWithoutReload();\n      } else {\n        window.location.hash = hash;\n      }\n    },\n\n    setHashWithoutScrolling(hash) {\n      const scrollV = document.body.scrollTop;\n      const scrollH = document.body.scrollLeft;\n\n      window.location.hash = hash;\n\n      document.body.scrollTop = scrollV;\n      document.body.scrollLeft = scrollH;\n    },\n\n    removeHashWithoutReload(triggeredByHashChange) {\n      const loc = window.location;\n      if ('replaceState' in window.history) {\n        window.history.replaceState('', document.title, loc.pathname + loc.search);\n\n        if (oldHash !== '' && !triggeredByHashChange) {\n          this._onHashChange('');\n        }\n      } else if (loc.hash !== '') {\n        // Fallback for old browsers\n        this.setHashWithoutScrolling('');\n      }\n    },\n\n    isCurrentHash(hash) {\n      return window.location.hash === hash;\n    },\n\n    isRegisteredHash(hash) {\n      return registeredHashes.indexOf(hash) > -1;\n    },\n\n    isCurrentRegisteredHash() {\n      return this.isRegisteredHash(window.location.hash);\n    },\n\n    registerHash(hash, triggerOnCurrent) {\n      if (this.isRegisteredHash(hash)) return;\n\n      registeredHashes.push(hash);\n\n      if (triggerOnCurrent && this.isCurrentHash(hash)) {\n        this.triggerHashEnter(hash);\n      }\n    },\n\n    unregisterHash(hash) {\n      const i = registeredHashes.indexOf(hash);\n      if (i > -1) {\n        registeredHashes.splice(i, 1);\n      }\n    },\n\n    _triggerCustomEvent(el, eventName, data) {\n      let event;\n      if (window.CustomEvent) {\n        event = new CustomEvent(eventName, { detail: data });\n      } else {\n        event = document.createEvent('CustomEvent');\n        event.initCustomEvent(eventName, true, true, data);\n      }\n      el.dispatchEvent(event);\n    },\n\n    triggerHashEnter(hash) {\n      this._triggerCustomEvent(document, `hashactions:enter:${hash}`, { hash });\n    },\n\n    triggerHashExit(hash) {\n      this._triggerCustomEvent(document, `hashactions:exit:${hash}`, { hash });\n    },\n\n    onHashEnter(hash, callback, triggerOnCurrent) {\n      this.registerHash(hash);\n      document.addEventListener(`hashactions:enter:${hash}`, callback);\n\n      if (triggerOnCurrent && this.isCurrentHash(hash)) {\n        this.triggerHashEnter(hash);\n      }\n    },\n\n    onHashExit(hash, callback) {\n      this.registerHash(hash);\n      document.addEventListener(`hashactions:exit:${hash}`, callback);\n    },\n\n    // Shorthand for defining both onHashEnter and onHashExit\n    on(hash, o, triggerEnterOnCurrent) {\n      if (typeof o.exit === 'function') {\n        this.onHashExit(hash, o.exit);\n      }\n      if (typeof o.enter === 'function') {\n        this.onHashEnter(hash, o.enter, triggerEnterOnCurrent);\n      }\n    },\n\n    _onHashChange(hash) {\n      if (hash !== oldHash && this.isRegisteredHash(oldHash)) {\n        this.triggerHashExit(oldHash);\n      }\n      if (this.isRegisteredHash(hash)) {\n        this.triggerHashEnter(hash);\n      }\n      oldHash = hash;\n\n      if (hash === '' && this.hideEmptyHashFromURL) {\n        this.removeHashWithoutReload(true);\n      }\n    },\n  };\n\n  window.addEventListener('hashchange', () => {\n    hashActions._onHashChange(window.location.hash);\n  });\n\n  return hashActions;\n})();\n"]}